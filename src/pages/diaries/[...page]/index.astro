---
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import Heading1 from "@/components/atoms/Heading1.astro";
import { COLORS } from "@/constants/color";
import { DIARY_LEARNING_DESCRIPTION, SITE_NAME } from "@/constants/index";
import Layout from "@/layouts/Layout.astro";
import { getDiaries } from "@/utils/diary";
import { formatPostDate } from "@/utils/index";
import type { GetStaticPathsOptions } from "node_modules/astro/dist/@types/astro";

const pageName = "diaries";
const capitalizePageName = pageName.charAt(0).toUpperCase() + pageName.slice(1);
const title = `${capitalizePageName} - ${SITE_NAME}`;
const description = DIARY_LEARNING_DESCRIPTION;
const baseColor = COLORS.MAUVE;

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const colors = [...Object.values(COLORS)];

	return paginate(
		await getDiaries().then((diaries) =>
			diaries
				.map((diary, i) => {
					return {
						...diary,
						baseColor: colors[i % colors.length] as (typeof colors)[number],
					};
				})
				.reverse(),
		),
		{ pageSize: 18 },
	);
}

const { page } = Astro.props;
---

<Layout
  activeName="diaries"
  title={title}
  description={description}
  baseColor={baseColor}
>
  <section>
    <Heading1 baseColor={baseColor} text="Diaries" id="Diaries" />
  </section>
  <section id="Articles" class="h-full">
    <div class="grid grid-cols-[repeat(auto-fill,minmax(200px,_1fr))] gap-4">
      {
        page.data.map((diary) => (
          <Card
            text="Diary"
            link={{
              href: `/diaries/${diary.slug}/`,
              target: "_self",
            }}
            title={`${formatPostDate(diary.data.publishedDate)}の学び`}
            baseColor={diary.baseColor}
          />
        ))
      }
    </div>
  </section>
  <section>
    <Pagination
      next={{
        slug: page.url.next,
      }}
      prev={{
        slug: page.url.prev,
      }}
      baseColor={baseColor}
    />
  </section>
</Layout>
