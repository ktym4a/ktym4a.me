---
import type { ColorType } from "@/types/index";
import Link from "./atoms/Link.astro";
import Tag from "./atoms/Tag.astro";

interface Props {
	prev:
		| {
				url: string | undefined;
				name?: string | undefined;
				baseColor: ColorType;
		  }
		| undefined;
	next:
		| {
				url: string | undefined;
				name?: string | undefined;
				baseColor: ColorType;
		  }
		| undefined;
}

const { prev, next } = Astro.props;
---

<div class="flex justify-between items-center gap-4">
  {
    next?.url ? (
      <div class="flex flex-col items-center justify-center gap-2 w-auto">
        <Link
          href={next.url}
          target="_self"
          colors={{
            text: next.baseColor.text as string,
            childHoverBackground: next.baseColor.childHoverBackground as string,
            childFocusBackground: next.baseColor.childFocusBackground as string,
            childHoverOutline: next.baseColor.childHoverOutline as string,
            childFocusOutline: next.baseColor.childFocusOutline as string,
          }}
          class={""}
          title={next.name || ""}
        >
          <Tag text="Next" className="h-full">
            <div class="flex items-center justify-center">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="h-6 w-6 md:h-8 md:w-8 rotate-180"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M10 18l6 -6l-6 -6v12" />
              </svg>
              {next.name ? <p class="text-xs md:text-sm">{next.name}</p> : <div />}
          </div>
          </Tag>
        </Link>
      </div>
    ) : (
      <div />
    )
  }
  {
    prev?.url && (
      <div class="mt-auto flex flex-col items-center justify-center gap-2 w-auto">
        <Link
          href={prev.url}
          target="_self"
          colors={{
            text: prev.baseColor.text as string,
            childHoverBackground: prev.baseColor.childHoverBackground as string,
            childFocusBackground: prev.baseColor.childFocusBackground as string,
            childHoverOutline: prev.baseColor.childHoverOutline as string,
            childFocusOutline: prev.baseColor.childFocusOutline as string,
          }}
          class={""}
          title={prev.name || ""}
        >
          <Tag text="Prev" className="h-full">
            <div class="flex items-center justify-center">
              {prev.name ? <p class="text-xs md:text-sm">{prev.name}</p> : <div />}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="h-6 w-6 md:h-8 md:w-8"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M10 18l6 -6l-6 -6v12" />
              </svg>
            </div>
          </Tag>
        </Link>
      </div>
    )
  }
</div>
