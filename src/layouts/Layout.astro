---
import Head from '@/components/Head.astro'
import MainLayout from '@/layouts/MainLayout.astro'
import SideLayout from '@/layouts/SideLayout.astro'
import { type ColorType } from '@/types/index'
import type { MarkdownHeading } from 'astro'

interface Props {
    activeName: string
    baseColor: ColorType
    currentName?: string | undefined
    description: string
    mainTagName?: string | undefined
    title: string
    toc?:
        | {
              headings: MarkdownHeading[] | undefined
              tagName: string
          }
        | undefined
}

const {
    activeName,
    baseColor,
    currentName = undefined,
    description,
    mainTagName = undefined,
    title,
    toc = undefined
} = Astro.props
const routes = Astro.url.pathname.split('/').filter((path) => path)
const currentPath = title === '404 - ktym4a' ? '404' : routes.at(-1) ?? 'ktym4a'
---

<!doctype html>
<html
    lang='en'
    class='ctp-mocha min-h-dvh overflow-hidden scroll-smooth bg-ctp-crust font-mono dark:bg-ctp-surface0'
>
    <head>
        <Head title={title} description={description} />
    </head>
    <body
        class={`relative min-h-dvh from-ctp-crust dark:from-ctp-surface0 text-ctp-text from-40% to-100% bg-gradient-to-br text-sm md:text-base ${baseColor.backgroundGradient}`}
    >
        <div
            class='m-auto grid min-h-dvh max-w-7xl grid-cols-[2.75rem_1fr] md:grid-cols-[16rem_1fr] lg:grid-cols-[24rem_1fr] lg:px-2'
        >
            <SideLayout
                activeName={activeName}
                baseColor={baseColor}
                currentName={currentName}
                currentPath={currentPath}
                routes={routes}
                toc={toc}
            />
            <MainLayout
                baseColor={baseColor}
                currentPath={currentPath}
                currentName={currentName}
                routes={routes}
                tagName={mainTagName}
            >
                <slot />
            </MainLayout>
        </div>
    </body></html
>
